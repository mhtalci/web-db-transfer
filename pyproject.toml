[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "web-database-migration-assistant"
version = "1.0.0"
description = "A comprehensive Python-based tool for migrating web applications and databases between different systems, platforms, and environments"
authors = [
    {name = "Migration Assistant Team", email = "team@migration-assistant.com"},
]
maintainers = [
    {name = "Migration Assistant Team", email = "team@migration-assistant.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = [
    "migration", "database", "web", "transfer", "backup", "cloud", 
    "cpanel", "directadmin", "plesk", "aws", "gcp", "azure"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Go",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: System :: Archiving :: Backup",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
]

dependencies = [
    # CLI Framework
    "click>=8.1.0",
    "rich>=13.0.0",
    "prompt-toolkit>=3.0.0",
    
    # API Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Database Connectors
    "mysql-connector-python>=8.2.0",
    "psycopg2-binary>=2.9.0",
    "pymongo>=4.6.0",
    "redis>=5.0.0",
    "sqlalchemy>=2.0.0",
    
    # File Transfer & Cloud SDKs
    "paramiko>=3.4.0",
    "ftputil>=5.0.0",
    "boto3>=1.34.0",
    "google-cloud-storage>=2.10.0",
    "azure-storage-blob>=12.19.0",
    "docker>=7.0.0",
    "kubernetes>=28.1.0",
    
    # Authentication & Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.0",
    "python-multipart>=0.0.6",
    
    # Utilities
    "pyyaml>=6.0.0",
    "toml>=0.10.0",
    "python-dotenv>=1.0.0",
    "asyncio>=3.4.3",
    "aiofiles>=23.2.0",
    "httpx>=0.25.0",
    "croniter>=1.4.0",
    
    # Monitoring & Reporting
    "psutil>=5.9.0",
    "jinja2>=3.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-benchmark>=4.0.0",
    "docker>=7.0.0",
]

[project.scripts]
migration-assistant = "migration_assistant.cli.main:main"
migration-api = "migration_assistant.api.main:start_server"

[project.urls]
Homepage = "https://github.com/migration-assistant/web-database-migration-assistant"
Documentation = "https://migration-assistant.readthedocs.io"
Repository = "https://github.com/migration-assistant/web-database-migration-assistant"
Issues = "https://github.com/migration-assistant/web-database-migration-assistant/issues"

[tool.hatch.build.targets.wheel]
packages = ["migration_assistant"]
include = [
    "migration_assistant/bin/*",
    "migration_assistant/templates/*",
    "migration_assistant/static/*",
]

[tool.hatch.build.targets.sdist]
include = [
    "migration_assistant/",
    "go-engine/",
    "scripts/",
    "docs/",
    "tests/",
    "examples/",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "pyproject.toml",
]
exclude = [
    "*.pyc",
    "__pycache__/",
    ".git/",
    ".pytest_cache/",
    "venv/",
    ".venv/",
    "build/",
    "dist/",
    "*.egg-info/",
]

[tool.hatch.version]
path = "migration_assistant/__init__.py"

[tool.hatch.build.hooks.custom]
path = "scripts/build_hook.py"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["migration_assistant"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmark tests",
]

[tool.coverage.run]
source = ["migration_assistant"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]